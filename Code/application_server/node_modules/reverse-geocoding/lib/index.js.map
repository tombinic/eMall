{"version":3,"sources":["../src/index.js"],"names":["module","exports","config","callback","Error","latitude","longitude","map","address","querystring","stringify","console","log","error","response","body","data","JSON","parse","status","message","undefined","err"],"mappings":";;AAAA;;;;AACA;;;;;;AAEAA,OAAOC,OAAP,GAAiB,UAACC,MAAD,EAASC,QAAT,EAAsB;AACrC,MAAI,CAACD,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD,GAFD,MAEO,IAAI,CAACF,OAAOG,QAAR,IAAoB,CAACH,OAAOI,SAAhC,EAA2C;AAChD,UAAM,IAAIF,KAAJ,CAAU,kCAAV,CAAN;AACD;;AALoC,MAQnCC,QARmC,GASjCH,MATiC,CAQnCG,QARmC;AAAA,MAQzBC,SARyB,GASjCJ,MATiC,CAQzBI,SARyB;AAAA,MAQdC,GARc,GASjCL,MATiC,CAQdK,GARc;;;AAWrC,SAAOL,OAAOG,QAAd,CAXqC,CAWb;AACxB,SAAOH,OAAOI,SAAd,CAZqC,CAYZ;;AAEzB,MAAIE,wEAAsEH,QAAtE,SAAkFC,SAAtF;;AAEA,UAAQC,GAAR;AACE,SAAK,OAAL;AACEC,iFAAyEH,QAAzE,SAAqFC,SAArF;AACA;AACF,SAAK,UAAL;AACEE,oEAA4DH,QAA5D,SAAwEC,SAAxE;AACA;AACF;AACE;AARJ;AAUA,SAAOJ,OAAOK,GAAd,CA1BqC,CA0BlB;AACnBC,mBAAeC,sBAAYC,SAAZ,CAAsBR,MAAtB,CAAf;AACAS,UAAQC,GAAR,CAAYJ,OAAZ;AACA,MAAI;AACF,2BAAQA,OAAR,EAAiB,UAACK,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AAC1C,UAAIF,KAAJ,EAAW;AACTV,iBAASU,KAAT;AACA;AACD;;AAED,UAAMG,OAAOC,KAAKC,KAAL,CAAWH,IAAX,CAAb;;AAEA;AACA,UAAIC,KAAKG,MAAL,KAAgB,IAAhB,IAAwBH,KAAKG,MAAL,KAAgB,CAAxC,IAA6CH,KAAKG,MAAL,CAAYC,OAAZ,KAAwB,IAAzE,EAA+E;AAC7EjB,iBAASkB,SAAT,EAAoBL,IAApB;AACD,OAFD,MAEO;AACLb,iBAASa,KAAKG,MAAd;AACD;AACF,KAdD;AAeD,GAhBD,CAgBE,OAAOG,GAAP,EAAY;AACZnB,aAASmB,GAAT;AACD;AACF,CAhDD","file":"index.js","sourcesContent":["import request from 'request';\nimport querystring from 'querystring';\n\nmodule.exports = (config, callback) => {\n  if (!config || !callback) {\n    throw new Error('Invalid arguments number.');\n  } else if (!config.latitude || !config.longitude) {\n    throw new Error('Latitude or Longitude not found.');\n  }\n\n  const {\n    latitude, longitude, map,\n  } = config;\n\n  delete config.latitude; // eslint-disable-line no-param-reassign\n  delete config.longitude; // eslint-disable-line no-param-reassign\n\n  let address = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}`;\n\n  switch (map) {\n    case 'baidu':\n      address = `https://api.map.baidu.com/geocoder/v2/?output=json&location=${latitude},${longitude}`;\n      break;\n    case 'opencage':\n      address = `https://api.opencagedata.com/geocode/v1/json?q=${latitude},${longitude}`;\n      break;\n    default:\n      break;\n  }\n  delete config.map; // eslint-disable-line no-param-reassign\n  address += `&${querystring.stringify(config)}`;\n  console.log(address);\n  try {\n    request(address, (error, response, body) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      const data = JSON.parse(body);\n\n      // be ware, every interface return back data was not same.\n      if (data.status === 'OK' || data.status === 0 || data.status.message === 'OK') {\n        callback(undefined, data);\n      } else {\n        callback(data.status);\n      }\n    });\n  } catch (err) {\n    callback(err);\n  }\n};\n"]}